Task
You are required to build a simple “Hello World” web site hosted on AWS cloud.
● You can use any AWS resources.
● The end goal is to have some URL. By entering this IP/DNS to the web browser it should
open a simple “Hello World” web page.
● No need to buy public DNS for URL, it is enough to access the site by public IP or any
AWS private/auto assigned DNS as well.
● Open Github repository to hold all the files related to the task
● Make your site scalable to high load of user requests, i.e. it should be able to work
correctly and fast then a lot of users open it simultaneously, but it should not waste
resources when there is low load.
● Make your site highly available, this means your site should be resistant to failures in
AWS availability zones.
● Create automatic deployment of changes made to your site. Example scenario:
○ Developer changes the page to show “Welcome, World” instead of “Hello World”
and pushes it to the Github repository. This will trigger some automatic process
which will replace the site files in relevant places.
○ Available options (but not limited to): Jenkins/”AWS CodeDeploy service”.

Additional
● Use terraform(or any IAC) to create infrastructure
○ https://www.terraform.io/
● You can use any other open source if needed

● Mind security considerations during development of the tasks

Review
● Once you are ready we will set up a meeting to review the task.
● We will discuss the trade-offs you had and considerations you made

Task 2:

Instruction:
1. Write unitests with pytests
2. Refactor and add the new product
======================================
Project Requirements Specification
======================================
Hi and welcome to team project As you know, we are a small inn with a prime location in a
prominent city ran by a friendly innkeeper named Allison. We also buy and sell only the finest
goods.
Unfortunately, our goods are constantly degrading in quality as they approach their sell by date.
We
have a system in place that updates our inventory for us. It was developed by a no-nonsense
type named
Leeroy, who has moved on to new adventures. Your task is to add the new feature to our
system so that
we can begin selling a new category of items. First an introduction to our system:
- All items have a SellIn value which denotes the number of days we have to sell the
item
- All items have a Quality value which denotes how valuable the item is
- At the end of each day our system lowers both values for every item
Pretty simple, right? Well this is where it gets interesting:
- Once the sell by date has passed, Quality degrades twice as fast

- The Quality of an item is never negative
- "Aged Brie" actually increases in Quality the older it gets
- The Quality of an item is never more than 50
- "Sulfuras", being a legendary item, never has to be sold or decreases in Quality
- "Backstage passes", like aged brie, increases in Quality as its SellIn value approaches;
Quality increases by 2 when there are 10 days or less and by 3 when there are 5 days or
less but
Quality drops to 0 after the concert
We have recently signed a supplier of conjured items. This requires an update to our system:
- "Conjured" items degrade in Quality twice as fast as normal items
Feel free to make any changes to the UpdateQuality method and add any new code as long as
everything
still works correctly. However, do not alter the Item class or Items property as those belong to
the
goblin in the corner who will insta-rage and one-shot you as he doesn't believe in shared code
ownership (you can make the UpdateQuality method and Items property static if you like, we'll
cover
for you).
Just for clarification, an item can never have its Quality increase above 50, however "Sulfuras"
is a
legendary item and as such its Quality is 80 and it never alters.

terrafrom solution based on https://aws.plainenglish.io/deploy-a-highly-available-group-of-ec2-instances-using-terraform-bc37daf1a33f
